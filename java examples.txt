import java.util.Arrays;
import java.util.stream.IntStream;

import java.util.Arrays;

class Solution {
    public int solution(int[] A) {
        int size = A.length;
        int temp = 0;
        if (size == 0){
            return 0;
        }
        if ((A.length > 0) && (A.length <= 100000))
        {
           for(int i = 0; i<A.length; i++ )
           {
                if ((A[i] >= -1000000) && (A[i] <= 1000000))  
                {
                    if(A[i] > 0)
                        {
                            if (temp == 0) 
                            {
                                temp = A[i];
                            } //if
                            else
                            {
                                if (A[i] < temp)
                                {
                                    temp = A[i];
                                }  
                            }       
                        } 
                }
           }
        }
        return temp;
    }
}

====================
class Main {

  // create a method
    public int solution(int[] A) {
        int size = A.length;
        int min = 0;
        int max = 0;
        if (size == 0){
            return 0;
        }
        if ((A.length > 0) && (A.length <= 100000))
        {
           for(int i = 0; i<A.length; i++ )
           {
                if ((A[i] >= -1000000) && (A[i] <= 1000000))  
                {
                    if(A[i] > 0)
                        {
                            if (min == 0) 
                            {
                                min = A[i];
                                max = A[i];
                            } //if
                            else
                            {
                                if (A[i] < min)
                                {
                                    min = A[i];
                                }  
                                if (A[i] > max)
                                {
                                	max = A[i];
                                }
                            }       
                        } 
                }     
           }//end for
        }
        return  max;
    }

  public static void main(String[] args) {
    
    // create an object of Main
    Main obj = new Main();
    // calling method
    int[] data = {1, 3, 6, 4, 1, 2};
    int result = obj.solution(data);
    System.out.println("value is: " + result);
  }
}
==========================================================
import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.Arrays;
class Main {

  // create a method
    public int solution(int[] A) {
        int size = A.length;
        int min = 0;
        int max = 0;
        int current =0;
        int next = 0;
        if (size == 0){
            return 0;
        }
        
        
        if ((size > 0) && (size <= 100000))
        {
           //sort array
           Arrays.sort(A);
           System.out.println("Length is: " + size);
           System.out.println("Last value is: " + A[size - 1]);
           //incase the largest number is negative
           if (A[size - 1] <= 0)
           {
             return 1;
           }
           for(int i = 0; i < size; i++ )
           {
             current = A[i] ;
             next = A[i+1];
	     //incase current value is negative	
             if (current <= 0)
             {
             //do nothing
             }
             else if (current == next)
             {
             // do nothing
             }
             else if (current != next)
             {
		if ( (current + 1) == next)
                {
                //do nothing
                }
                else
                {
                return (current + 1);
                }
             }
             
           }//end for 
        }
	//incase input is blank
        return  1;
    }

  public static void main(String[] args) {
    
    // create an object of Main
    Main obj = new Main();
    // calling method
    int[] data = {1, 3, 6, 4, 1, 2,-3};
    int result = obj.solution(data);
    System.out.println("value is: " + result);
  }
}

===============
import java.util.Arrays;
import java.util.stream.IntStream;
import java.util.Arrays;
class Main {

  // create a method
    public void shouldInvert(String str) {
      str = str.trim();
      String nstr="";
      char ch;
      int size = str.length();  
      System.out.print("Original word: " + str);
      System.out.print("\nsize: " + size); 

      //when string is empty or null 
      if ((size == 0) || (str == null))
      {
        assertEquals(" ",actual[i])
         
      }

      //when length of string equals 1
      if (size == 1)
      {
         return (str);
      }
      
      //when length of string is greater than 1
      if (size > 1)
      {
        for (int i=0; i<str.length(); i++)
        {
          ch= str.charAt(i); //extracts each character
          nstr= ch+nstr; //adds each character in front of the existing string
        }
      return (nstr);
      }
      return (" ");
    }
    

  public static void main(String[] args) {
    
    // create an object of Main
    Main obj = new Main();
    String val = obj.shouldInvert(" ");   
    // calling method
    System.out.print ("\nvalue=" + val);
  }
}

================================================
// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int solution(int[] A) {
        int size = A.length;
        int temp = 0;
        //verify array is empty
        if (size == 0)
        {
            return 0;
        }
        //verify total range of arran is 1 to 1000
        if ((size >=1) && (size <= 1000))
        {
            for(int i = 0; i < size; i++ )
            {
                //verify each element of the array
                if ((A[i] % 3 == 0) && ((A[i]>=-10000)&& (A[i] <=10000)))
                {
                    if (A[i] > temp)
                    {
                        temp = A[i];
                    }        
                }
            }//end for
        }
        //verify atleast one element in Array satisfies the condition
        if (temp==0)
        {
            return 0;
        }
        return temp;
    }
}

